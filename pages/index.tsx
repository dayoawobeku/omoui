import {useEffect, useState} from 'react';
import {useRouter} from 'next/router';
import type {NextPage} from 'next';
import Head from 'next/head';
import {dehydrate, QueryClient, useQuery} from '@tanstack/react-query';
import CompanyCard from '../components/CompanyCard';
import {getPaginatedCompanies} from '../queryfns/getPaginatedCompanies';

export async function getStaticProps() {
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(['companies'], () =>
    getPaginatedCompanies(1),
  );
  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
}

const Homepage: NextPage = () => {
  const router = useRouter();
  const [pageIndex, setPageIndex] = useState(
    router.query.page ? Number(router.query.page) : 1,
  );

  useEffect(() => {
    if (router.query.page) {
      setPageIndex(Number(router.query.page));
    }
  }, [router.query]);

  const {data: companies} = useQuery(
    ['companies', router.query.page ? Number(router.query.page) : 1],
    () =>
      getPaginatedCompanies(router.query.page ? Number(router.query.page) : 1),
  );

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="mx-auto max-w-[922px] py-20 text-center">
        <h1 className="text-2xl font-bold text-grey">
          Find your favorite sites in one place, then learn from the greats.
        </h1>
        <p className="mt-6 mb-2 text-md font-medium text-body">
          We track each of these sites and update our collection regularly to
          include the latest designs.
        </p>
        <p className="text-md font-medium text-blue">*No account needed</p>
      </section>

      <section>
        <CompanyCard companies={companies?.data} />

        <div className="mt-10 flex items-end justify-center gap-7">
          <div className="flex gap-3">
            <button
              className="text-body"
              onClick={() => {
                setPageIndex(pageIndex - 1);
                router.push(`/?page=${pageIndex - 1}`, undefined, {
                  scroll: false,
                });
              }}
              disabled={companies?.meta?.pagination?.page === 1}
            >
              Previous
            </button>
            <button
              className="text-body"
              onClick={() => {
                setPageIndex(pageIndex + 1);
                router.push(`/?page=${pageIndex + 1}`, undefined, {
                  scroll: false,
                });
              }}
              disabled={
                companies?.meta?.pagination?.page ===
                companies?.meta?.pagination?.pageCount
              }
            >
              Next
            </button>
          </div>
          <p className="text-sm">
            Page {companies?.meta?.pagination?.page} of{' '}
            {companies?.meta?.pagination?.pageCount}
          </p>
        </div>
      </section>
    </>
  );
};

export default Homepage;
